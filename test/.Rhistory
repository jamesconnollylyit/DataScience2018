install.packages("jsonlite", repos = "https://cran.rstudio.com/") library("jsonlite") json_file <- 'https://datahub.io/examples/geojson-tutorial/datapackage.json' json_data <- fromJSON(paste(readLines(json_file), collapse = "")) # get list of all resources: print(json_data$resources$name) # print all tabular data(if exists any) for (i in 1:length(json_data$resources$datahub$type)) {     if (json_data$resources$datahub$type[i] == 'derived/csv') {         path_to_file = json_data$resources$path[i]         data <- read.csv(url(path_to_file))         print(data)     } }
install.packages("jsonlite", repos = "https://cran.rstudio.com/")
library("jsonlite")
json_file <- 'https://datahub.io/examples/geojson-tutorial/datapackage.json'
json_data <- fromJSON(paste(readLines(json_file), collapse = ""))
# get list of all resources:
print(json_data$resources$name)
mean (1:5)
mean(1:5)
?mean
?if
?"if"
??plot
help.start
help.start
help.start
clear
cls 
help (solve)
getwd
getwd()
setwd("C:/myprojects/project1")
options()
options(digits = 3)
x <- runif(20)
summary(x)
hist(x)
q()
setwd("C:/myprojects/project1") options() options(digits = 3) x <- runif(20) summary(x) hist(x) q()
+ hist(x)
mkdir("C:/myprojects/project1")
mkdir("C:/myprojects/project1")
setwd("C:/myprojects/project1")
options()
mkdir("C:/myprojects/project1")
??mkdir
dir.create("C:/myprojects/project1")
dir.create("C:/myprojects")
source("script1.R")
source("script1.R")
source("script1.R")
x
sink("myoutput", append = TRUE, split = TRUE)
pdf("mygraphs.pdf")
sink()
dev.off()
c(20,33)
x <- c(10.4, 5.6, 3.1, 6.4, 21.7)
1 / x
p <- c(1, 2, 4, 7)
q <- c(5, 5, 5)
p + q
p <- c(3, 5, 6, 8)
q <- c(3, 3, 3)
p + q
p <- c(3, 5, 6, 8)
q <- c(3, 3)
p + q
x <- c(10.4, 5.6, 3.1, 6.4, 21.7)
y <- c(x, 0, x)
z <- 2 * x + y + 1
z
y
x
prod(x)
prod(5)
prod(1)
prod(2)
var(x)
x <- c(10.4, 5.6, 3.1, 6.4, 21.7)
var(x)
sort(x)
?sort
sort(x, TRUE)
?seq
temp <- x > 13
temp
is.na(x)
z <- c(1:3, NA);
ind <- is.na(z)
ind
z
x = NA
x
x <- c(10.4, 5.6, 3.1, 6.4, 21.7)
x = NA
x
x = NA
x
x <- c(10.4, 5.6, 3.1, 6.4, NA)
x == NA
x
z <- 0:9
digits <- as.character(z)
as.integer(digits)
digits
x <- c(1, 2, 3, 4)
(x + 2)[(!is.na(x)) & x > 0] -> k
k
!is.na(x)
(!is.na(x)) & x > 0]
k <- [(!is.na(x)) & x > 0]
?<-
?"<-"
x <- c(2, 4, 6, 8)
y <- c(TRUE, TRUE, FALSE, TRUE)
sum(x[y])
count.fields(is.na(x))
count(is.na(x))
sum(is.na(x))
x <- c(34, 56, 55, 87, NA, 4, 77, NA, 21, NA, 39)
sum(is.na(x))
a = c(1, 2, 4, 5, 6)
b = c(3, 2, 4, 1, 9)
cbind(a, b)
rbind(a, b)
a <- b
a
b
x * y
x = c(4, 6, 5, 7, 10, 9, 4, 15)
y = c(0, 10, 1, 8, 2, 3, 4, 1)
x * y
a = c(1, 2, 4, 5, 6)
b = c(3, 2, 4, 1, 9)
cbind(a, b)
a = c(1, 5, 4, 3, 6)
b = c(3, 5, 2, 1, 9)
a, - b
a = c(1, 5, 4, 3, 6)
b = c(3, 5, 2, 1, 9)
a
b
a = c(1, 5, 4, 3, 6)
b = c(3, 5, 2, 1, 9)
a<- b
a
b
a = c(10, 2, 4, 15)
b = c(3, 12, 4, 11)
rbind(a,b)
x <- 2
x
y <- 5
y
a <- b <- 7
a
b
a
rm(a)
a
x <- 5
class(x)
i <- 5L
i
is.integer(i)
class(4L)
class(2.8)
4L * 2.8
class(4L * 2.8)
class(5L)
class(2L)
5L / 2L
class(5L / 2L)
x <- "data"
x
y <- factor("data")
y
nchar(x) nchar("hello") nchar(3) nchar(505) nchar(y)
nchar(x)
nchar("hello")
nchar(3)
nchar(505)
nchar(y)
date1 <- as.Date("2018-02-26")
date1
class(date1)
as.numeric(date1)
date2 <- as.POSIXct("2018-02-26 08:00")
date2
class(date2)
as.numeric(date2)
date1 <- as.Date("26-02-2018")
date1
date1 <- as.Date("2018-02-26")
date1
class(date1)
as.numeric(date1)
date2 <- as.POSIXct("2018-02-26 08:00")
date2
class(date2)
as.numeric(date2)
date1 <- as.Date("2018-03-02")
date1
class(date1)
as.numeric(date1)
date2 <- as.POSIXct("2018-03-02 08:00")
date2
class(date2)
as.numeric(date2)
date1 <- as.Date("2018-03-08")
date1
class(date1)
as.numeric(date1)
date2 <- as.POSIXct("2018-03-08 08:00")
date2
class(date2)
as.numeric(date2)
TRUE * 5
FALSE * 5
k <- TRUE
class(k)
is.logical(k)
# Does 2 equal 3
2 == 3
# Does 2 equal 3?
2 == 3
# Does 2 not equal 3?
2 != 3
# Is 2 less than 3?
2 < 3
# Is 2 greater than or equal to 3?
2 >= 3
install.packages("swirl")
library("swirl")
ls()
swirl
swirl()
swirl()
num_vect <- c(0.5, 55, -10, 6)
tf <- c(num_vect -1)
tf <- num_vect -1
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_char <- c(my_char, "James")
my_name <- c(my_char, "James")
my_name <- c(my_char, "James")
my_name <- c(my_char, "James")
info()
my_name <- c(my_char, " James")
my_char
skip()
my_name <- c(my_char, " James")
my_name <- c(my_char, "James")
my_name <- c(my_char, "James")
my_name <- c(my_char, "JAmes")
my_name <- c(my_char, "JAmes")
my_name <- c(my_char, "JAmes")
my_name <- c(my_char, "JAmes")
my_name <- c(my_char, "JAmes")
info()
skip()
skip()
skip()
info()
main()
my_name <- c(my_char, "JAmes")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "y", "z"))
paste(1:3, c("X", "y", "z"), sep = " ")
paste(1:3, c("X", "y", "z"), sep = "")
paste(1:3, c("X", "y", "z"), sep = "")
paste(1:3, c("X", "y", "z"), sep = "")
main()
main()
swirl()
library("swirl")
library("swirl")
install.packages("swirl")
swirl()
library("swirl")
swirl
main()
swirl()
library(swirl)> library(swirl) install_course("R Programming") swirl()
swirl()
library("swirl")
library(swirl)
install_course("R programming")
library(swirl)
install_course("R Programming")
swirl()
library(swirl)
install_course("R Programming")
swirl()
pastecs(1:3, c("X", "Y", "Z"), sep = "")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
vec1 <- c("Hockey", "Football", "Baseball", "Curling", "Rugby", "Hurling", "Basketball", "Tennis", "Cricket", "Lacrosse")
vec2 <- c(vec1, "Hockey", "Lacrosse", "Hockey", "Water Polo", "Hockey", "Lacrosse")
vec2_factor <- as.factor(vec2)
vec2_factor
library(swirl)
install_course("R Programming")
swirl()
swirl()
5 + 7
x <- 5 + 7
x
y <- x + 3
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- (sqrt(z - 1))
my_sqrt <- c(sqrt(z - 1))
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- (z / my_sqrt)
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
install.packages("Swirlify")
install.packages("Swirlify")
2
install.packages("Swirlify")
install.packages(c("swirl", "swirlify"))
library("swirlify")
install_course("R Programming")
library(swirl)
install_course("R Programming")
library("swirl")
install_course("R Programming")
install_course("R Programming")
library("swirl")
install_course("R Programming")
swirl()
1:20
pi:10
15:1
?:
?`:`
seq(1, 20)
seq(0, 10, 0.5)
seq(5, 10, length = 30)
seq(5, 10, length=30)
myseq <- seq(5, 10, length=30)
myseq <- seq(5, 10, length=30)
myseq <- seq(5, 10, length=30)
myseq <- seq(5, 10, length=30)
myseq <- seq(5, 10, length=30)
swirl()
library("swirl")
swirl()
install.packages("swirl", dependencies = TRUE)
swirl()
library("swirl")
swirl()
library("swirl")
swirl()
library(swirl)
install_course_zip("d/swirl_courses-master.zip", multi = TRUE,                    which_course = "R Programming")
library(swirl)
install_course_zip("d/swirl/swirl_courses-master.zip", multi = TRUE,                    which_course = "R Programming")
install_course_zip("d/swirl/swirl_courses-master.zip", multi = TRUE, which_course = "R Programming")
library(swirl)
install_course_zip("d/swirl/swirl_courses-master", multi = TRUE, which_course = "R Programming")
install_course_zip("d/swirl/swirl_courses-master", multi = TRUE)
install_course("d/swirl/swirl_courses-master", multi = TRUE)
install_course_zip("d/swirl/swirl_courses-master", multi = TRUE, which_course = "R Programming")
install_course_zip("d/swirl/swirl_courses-master.zip", multi = TRUE, which_course = "R Programming")
install_course_zip("~/Downloads/swirl_courses-master.zip", multi = TRUE, which_course = "R Programming")
install_course_zip("~\Downloads\swirl_courses-master.zip", multi = TRUE, which_course = "R Programming")
install_course_zip("c/swirl_courses-master.zip", multi = TRUE, which_course = "R Programming")
install_course_zip("c:/swirl_courses-master.zip", multi = TRUE, which_course = "R Programming")
library(swirl) > library(swirl)library(swirl)> library(swirl) install_course_zip("c:/swirl_courses-master.zip", multi = TRUE,                    which_course = "Course Name Here") swirl()
install_course_zip("c:/swirl_courses-master.zip", multi = TRUE, which_course = "R Programming")
swirl()
factor (x=c("High School", "Degree", "Masters", "Doctorate"), levels = c("High School", "Degree", "Masters", "Doctorate"), ordered = TRUE)
exit()
main()
factor (x=c("High School", "Degree", "Masters", "Doctorate"), levels = c("High School", "Degree", "Masters", "Doctorate"), ordered = TRUE)
factor (x=c("Degree", "High School", "Masters", "Doctorate"), levels = c("High School", "Degree", "Masters", "Doctorate"), ordered = TRUE)
install_course_zip("c:/swirl_courses-master.zip", multi = TRUE, which_course = "R Programming")
swirl()
main()
library(swirl)
install_course_zip("c:/swirl_courses-master.zip", multi = TRUE, which_course = "R Programming")
swirl()
swirl()
library(swirl)
library(swirl)
install_course_zip("c:/swirl_courses-master.zip", multi = TRUE, which_course = "R Programming")
swirl()
main()
main()
my_vector <-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5> dim(my_vector) <- c(4, 5))
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(data)
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
?colnames()
my_data <- (colnames = cnames)
info()
my_data <- data.frame(colnames = patients)
colnames(my_data) <- cnames
library(swirl)
install_course_zip("c:/swirl_courses-master.zip", multi = TRUE, which_course = "R Programming")
swirl()
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attr(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
my_matrix2 <- as.matrix(1:20, nrow = 4, ncol = 5)
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(matrix, my_matrix)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cname <- c("patient", "age", "weight", "bp", "rating", "test")
cname <- c("patient", "age", "weight", "bp", "rating", "test")
cname <- c("patient", "age", "weight", "bp", "rating", "test")
cname <- c("patient", "age", "weight", "bp", "rating", "test")
cname <- c("patient", "age", "weight", "bp", "rating", "test")
main()
cname <- c("patient", "age", "weight", "bp", "rating", "test")
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
?colnames
my_data <- c(mydata, colnames = cnames)
my_data <- c(my_data, colnames = cnames)
colnames(my_data) <- my_data
colnames(my_data) <- cnames
my_data
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, row = 10)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
main()
main()
main()
main()
rownames <- c("Patient ID", "AdmDate", "Age", "Daibetes", "Status")
my_data <- data.frame(row.names = rownames)
my_data <- data.frame(row.names = rownames)
rownames <- c("Patient ID", "AdmDate", "Age", "Daibetes", "Status")
my_data <- data.frame(row.names = rownames)
my_data
rm(my_data)
rm(rownames)
rownames <- c("Manager", "Date", "Country", "Gender", "Age", "Q1", "Q2", "Q3", "Q4", "Q5")
date_col <- as.Date("2018-15-10", "2018-01-11", "2018-21-10", "2018-28-10")
country_col <- c("US", "US", "IRL", "IRL", "IRL")
gender_col <- c("M", "F", "F", "M", "F")
age_col <- c(25, 34, 28, 52)
q1_col <- c(5, 3, 3, 3, 2)
q2_col <- c(4, 5, 5, 3, 2)
q3_col <- c(5, 2, 5, 4, 1)
q4_col <- c(5, 5, 5,, 2)
q5_col <- c(5, 5, 2,, 1)
my_data <- data.frame(date_col, country_col, gender_col, age_col, q1_col, q2_col, q3_col, q4_col, q5_col)
q4_col <- c(5, 5, 5,NA, 2)
q5_col <- c(5, 5, 2,NA, 1)
my_data <- data.frame(date_col, country_col, gender_col, age_col, q1_col, q2_col, q3_col, q4_col, q5_col)
my_data <- data.frame( row.names = rownames)
my_data
head(my_data)
summary(my_data)
str(my_data)
?data.frame
my_data <- data.frame(date_col, country_col, gender_col, age_col, q1_col, q2_col, q3_col, q4_col, q5_col, colnames = rownames)
rownames <- c("Manager", "Date", "Country", "Gender", "Age", "Q1", "Q2", "Q3", "Q4", "Q5")
date_col <- as.Date("2018-15-10", "2018-01-11", "2018-21-10", "2018-28-10")
country_col <- c("US", "US", "IRL", "IRL", "IRL")
gender_col <- c("M", "F", "F", "M", "F")
age_col <- c(25, 34, 28, 52)
q1_col <- c(5, 3, 3, 3, 2)
q2_col <- c(4, 5, 5, 3, 2)
q3_col <- c(5, 2, 5, 4, 1)
q4_col <- c(5, 5, 5,NA, 2)
q5_col <- c(5, 5, 2,NA, 1)
my_data <- data.frame(date_col, country_col, gender_col, age_col, q1_col, q2_col, q3_col, q4_col, q5_col, colnames = rownames)
rownames <- c("Manager", "Date", "Country", "Gender", "Age", "Q1", "Q2", "Q3", "Q4", "Q5")
date_col <- as.Date("2018-15-10", "2018-01-11", "2018-21-10", "2018-28-10", "2018-01-05")
country_col <- c("US", "US", "IRL", "IRL", "IRL")
gender_col <- c("M", "F", "F", "M", "F")
age_col <- c(32, 45, 25, 39, 99)
q1_col <- c(5, 3, 3, 3, 2)
q2_col <- c(4, 5, 5, 3, 2)
q3_col <- c(5, 2, 5, 4, 1)
q4_col <- c(5, 5, 5,NA, 2)
q5_col <- c(5, 5, 2,NA, 1)
my_data <- data.frame(date_col, country_col, gender_col, age_col, q1_col, q2_col, q3_col, q4_col, q5_col, colnames = rownames)
my_data <- data.frame( row.names = rownames)
my_data
head(my_data)
str(my_data)
my_data
rownames <- c("Manager", "Date", "Country", "Gender", "Age", "Q1", "Q2", "Q3", "Q4", "Q5")
date_col <- as.Date("2018-15-10", "2018-01-11", "2018-21-10", "2018-28-10", "2018-01-05")
country_col <- c("US", "US", "IRL", "IRL", "IRL")
gender_col <- c("M", "F", "F", "M", "F")
age_col <- c(32, 45, 25, 39, 99)
q1_col <- c(5, 3, 3, 3, 2)
q2_col <- c(4, 5, 5, 3, 2)
q3_col <- c(5, 2, 5, 4, 1)
q4_col <- c(5, 5, 5,NA, 2)
q5_col <- c(5, 5, 2,NA, 1)
my_data <- data.frame(country_col, gender_col, age_col, q1_col, q2_col, q3_col, q4_col, q5_col)
my_data
my_data <- data.frame( row.names = rownames)
my_data
colnames <- c("Manager", "Date", "Country", "Gender", "Age", "Q1", "Q2", "Q3", "Q4", "Q5")
date_col <- as.Date("2018-15-10", "2018-01-11", "2018-21-10", "2018-28-10", "2018-01-05")
country_col <- c("US", "US", "IRL", "IRL", "IRL")
gender_col <- c("M", "F", "F", "M", "F")
age_col <- c(32, 45, 25, 39, 99)
q1_col <- c(5, 3, 3, 3, 2)
q2_col <- c(4, 5, 5, 3, 2)
q3_col <- c(5, 2, 5, 4, 1)
q4_col <- c(5, 5, 5,NA, 2)
q5_col <- c(5, 5, 2,NA, 1)
my_data <- data.frame(country_col, gender_col, age_col, q1_col, q2_col, q3_col, q4_col, q5_col)
colnames(my_data) <- colnames
colnames <- c("Manager", "Date", "Country", "Gender", "Age", "Q1", "Q2", "Q3", "Q4", "Q5")
date_col <- as.Date("2018-15-10", "2018-01-11", "2018-21-10", "2018-28-10", "2018-01-05")
country_col <- c("US", "US", "IRL", "IRL", "IRL")
gender_col <- c("M", "F", "F", "M", "F")
age_col <- c(32, 45, 25, 39, 99)
q1_col <- c(5, 3, 3, 3, 2)
q2_col <- c(4, 5, 5, 3, 2)
q3_col <- c(5, 2, 5, 4, 1)
q4_col <- c(5, 5, 5,NA, 2)
q5_col <- c(5, 5, 2,NA, 1)
my_data <- data.frame(date_col, country_col, gender_col, age_col, q1_col, q2_col, q3_col, q4_col, q5_col)
colnames(my_data) <- colnames
colnames <- c("Date", "Country", "Gender", "Age", "Q1", "Q2", "Q3", "Q4", "Q5")
date_col <- as.Date("2018-15-10", "2018-01-11", "2018-21-10", "2018-28-10", "2018-01-05")
country_col <- c("US", "US", "IRL", "IRL", "IRL")
gender_col <- c("M", "F", "F", "M", "F")
age_col <- c(32, 45, 25, 39, 99)
q1_col <- c(5, 3, 3, 3, 2)
q2_col <- c(4, 5, 5, 3, 2)
q3_col <- c(5, 2, 5, 4, 1)
q4_col <- c(5, 5, 5,NA, 2)
q5_col <- c(5, 5, 2,NA, 1)
my_data <- data.frame(date_col, country_col, gender_col, age_col, q1_col, q2_col, q3_col, q4_col, q5_col)
colnames(my_data) <- colnames
my_data
date_col <- seq( as.Date("2018-15-10", "2018-01-11", "2018-21-10", "2018-28-10", "2018-01-05"))
colnames <- c("Date", "Country", "Gender", "Age", "Q1", "Q2", "Q3", "Q4", "Q5")
date_col <- c("2018-15-10", "2018-01-11", "2018-21-10", "2018-28-10", "2018-01-05")
country_col <- c("US", "US", "IRL", "IRL", "IRL")
gender_col <- c("M", "F", "F", "M", "F")
age_col <- c(32, 45, 25, 39, 99)
q1_col <- c(5, 3, 3, 3, 2)
q2_col <- c(4, 5, 5, 3, 2)
q3_col <- c(5, 2, 5, 4, 1)
q4_col <- c(5, 5, 5,NA, 2)
q5_col <- c(5, 5, 2,NA, 1)
my_data <- data.frame(date_col, country_col, gender_col, age_col, q1_col, q2_col, q3_col, q4_col, q5_col)
colnames(my_data) <- colnames
my_data
head(my_data)
str(my_data)
my_data$age[lmy_data$age == 99] <- NA
my_data$age[my_data$age == 99] <- NA
my_data$age_col[my_data$age_col == 99] <- NA
my_data$age_cat[my_data$age_col == 99] <- NA
my_data$age_col[my_data$age_col == 99] <- NA
my_data$age[my_data$age == 99] <- NA
my_data$Age[my_data$Age == 99] <- NA
my_data
my_data$Age[my_data$Age > 45] <- "Elderly"
my_data
newdata <- my_data[my_data$gender == "M" & my_data$age > 30,]
newdata
newdata <- my_data[my_data$Gender == "M" & my_data$Age > 30,]
newdata
newdata <- my_data[my_data$Gender == "M" & my_data$Age > 30]
newdata
newdata <- my_data[my_data$Gender == "M" & my_data$Age > 30,]
newdata
newdata <- my_data[my_data$Gender == "M" & my_data$Age > 30,] <- "Elderly"
my_data$AgeCat[my_data$Age > 45] <- "Elderly"
my_data
colnames <- c("Date", "Country", "Gender", "Age", "Q1", "Q2", "Q3", "Q4", "Q5")
date_col <- c("2018-15-10", "2018-01-11", "2018-21-10", "2018-28-10", "2018-01-05")
country_col <- c("US", "US", "IRL", "IRL", "IRL")
gender_col <- c("M", "F", "F", "M", "F")
age_col <- c(32, 45, 25, 39, 99)
q1_col <- c(5, 3, 3, 3, 2)
q2_col <- c(4, 5, 5, 3, 2)
q3_col <- c(5, 2, 5, 4, 1)
q4_col <- c(5, 5, 5,NA, 2)
q5_col <- c(5, 5, 2,NA, 1)
my_data <- data.frame(date_col, country_col, gender_col, age_col, q1_col, q2_col, q3_col, q4_col, q5_col)
colnames(my_data) <- colnames
my_data
head(my_data)
str(my_data)
my_data$Age[my_data$Age == 99] <- NA
my_data
my_data$AgeCat[my_data$Age > 45] <- "Elderly"
my_data
my_data$AgeCat[my_data$Age >= 45] <- "Elderly"
my_data
my_data$AgeCat[my_data$Age >= 45] <- "Elder"
my_data$AgeCat[my_data$Age > 26 & my_data$Age <= 44] <- "Middle Aged"
my_data$AgeCat[my_data$Age <=25] <- "Young"
my_data
my_data$AgeCat[my_data$Age == NA] <- "Elder"
my_data
my_data$AgeCat[my_data$Age == NA] <- "Elder"
my_data
my_data$AgeCat[my_data$Age = NA] <- "Elder"
my_data$AgeCat[my_data$Age == "NA"] <- "Elder"
my_data
colnames <- c("Date", "Country", "Gender", "Age", "Q1", "Q2", "Q3", "Q4", "Q5")
date_col <- c("2018-15-10", "2018-01-11", "2018-21-10", "2018-28-10", "2018-01-05")
country_col <- c("US", "US", "IRL", "IRL", "IRL")
gender_col <- c("M", "F", "F", "M", "F")
age_col <- c(32, 45, 25, 39, 99)
q1_col <- c(5, 3, 3, 3, 2)
q2_col <- c(4, 5, 5, 3, 2)
q3_col <- c(5, 2, 5, 4, 1)
q4_col <- c(5, 5, 5,NA, 2)
q5_col <- c(5, 5, 2,NA, 1)
my_data <- data.frame(date_col, country_col, gender_col, age_col, q1_col, q2_col, q3_col, q4_col, q5_col)
colnames(my_data) <- colnames
my_data
head(my_data)
str(my_data)
my_data$Age[my_data$Age == 99] <- NA
my_data
my_data$AgeCat[my_data$Age >= 45] <- "Elder"
my_data$AgeCat[my_data$Age > 26 & my_data$Age <= 44] <- "Middle Aged"
my_data$AgeCat[my_data$Age <= 25] <- "Young"
my_data$AgeCat[my_data$Age == "NA"] <- "Elder"
my_data
colnames <- c("Date", "Country", "Gender", "Age", "Q1", "Q2", "Q3", "Q4", "Q5")
date_col <- c("2018-15-10", "2018-01-11", "2018-21-10", "2018-28-10", "2018-01-05")
country_col <- c("US", "US", "IRL", "IRL", "IRL")
gender_col <- c("M", "F", "F", "M", "F")
age_col <- c(32, 45, 25, 39, 99)
q1_col <- c(5, 3, 3, 3, 2)
q2_col <- c(4, 5, 5, 3, 2)
q3_col <- c(5, 2, 5, 4, 1)
q4_col <- c(5, 5, 5,NA, 2)
q5_col <- c(5, 5, 2,NA, 1)
my_data <- data.frame(date_col, country_col, gender_col, age_col, q1_col, q2_col, q3_col, q4_col, q5_col)
colnames(my_data) <- colnames
my_data
head(my_data)
str(my_data)
my_data$Age[my_data$Age == 99] <- NA
my_data
my_data$AgeCat[my_data$Age >= 45] <- "Elder"
my_data$AgeCat[my_data$Age > 26 & my_data$Age <= 44] <- "Middle Aged"
my_data$AgeCat[my_data$Age <= 25] <- "Young"
my_data$AgeCat[my_data$Age == NA] <- "Elder"
my_data
my_data$AgeCat[is.na(my_data$Age)] <- "Elder"
my_data
AgeCat <- factor(my_data$AgeCat, order = TRUE, levels = c("Young", "Middle Aged", "Elder"))
AgeCat
my_data$AgeCat <- AgeCat
my_data
str(my_data)
average_response <- sum(q1_col + q2_col + q3_col + q4_col + q5_col)
average_response
average_response <- rowsum(q1_col, q2_col, q3_col, q4_col, q5_col)
average_response <- rowsum(my_data)
adding <- q1_col + q2_col + q3_col + q4_col + q5_col
average_response <- rowsum(adding)
average_response <- rowsum(my_data[group = adding])
adding
summary_col <- q1_col + q2_col + q3_col + q4_col + q5_col
summary_col
my_data <- data.frame (my_data, summary_col)
my_data
summary_col <- q1_col + q2_col + q3_col + q4_col + q5_col
summary_col
my_data <- data.frame (my_data, summary_col)
my_data
colnames <- c("Date", "Country", "Gender", "Age", "Q1", "Q2", "Q3", "Q4", "Q5")
date_col <- c("2018-15-10", "2018-01-11", "2018-21-10", "2018-28-10", "2018-01-05")
country_col <- c("US", "US", "IRL", "IRL", "IRL")
gender_col <- c("M", "F", "F", "M", "F")
age_col <- c(32, 45, 25, 39, 99)
q1_col <- c(5, 3, 3, 3, 2)
q2_col <- c(4, 5, 5, 3, 2)
q3_col <- c(5, 2, 5, 4, 1)
q4_col <- c(5, 5, 5,NA, 2)
q5_col <- c(5, 5, 2,NA, 1)
my_data <- data.frame(date_col, country_col, gender_col, age_col, q1_col, q2_col, q3_col, q4_col, q5_col)
colnames(my_data) <- colnames
my_data
head(my_data)
str(my_data)
# recategorise 99 to NA
my_data$Age[my_data$Age == 99] <- NA
my_data
#Create a new column called AgeCat and categorise
my_data$AgeCat[my_data$Age >= 45] <- "Elder"
my_data$AgeCat[my_data$Age > 26 & my_data$Age <= 44] <- "Middle Aged"
my_data$AgeCat[my_data$Age <= 25] <- "Young"
my_data$AgeCat[is.na(my_data$Age)] <- "Elder"
#Show contents of my_data data frame
my_data
AgeCat <- factor(my_data$AgeCat, order = TRUE, levels = c("Young", "Middle Aged", "Elder"))
AgeCat
my_data$AgeCat <- AgeCat
summary_col <- q1_col + q2_col + q3_col + q4_col + q5_col
summary_col
my_data <- data.frame (my_data, summary_col)
my_data
swirl()
library("Swirl")
library(swirl)
swirl()
main()
?contains
z <- c(1, 2, 3, 4, 5)
x <- z["5"]
x
z <- c(1, 2, 3, 4, 5)
x <- z[5]
x
z <- c(1, 2, 3, 4, 5)
x <- z[z==5]
x
z <- c(1, 2, 3, 4, 5,5)
x <- z[z==5]
x
